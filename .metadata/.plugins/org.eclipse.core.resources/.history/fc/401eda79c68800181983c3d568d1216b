package DataStructure.core;

public class StringNode {
	
	public String data;
	public StringNode next;
	
	public StringNode()
	{
		next = null;
		data = "0";
	}
	
	public StringNode(String val,StringNode n)
	{
		data = val;
		next = n;
	}

	public void setLink(StringNode  n)
	{
		next  = n;
	}
	
	public void setData(String d)
	{
		data = d;
	}
	
	public String getData()
	{
		return data;
	}
	
	public StringNode getLink()
	{
		return next;
	}
}
class LinkedList{
	
	public StringNode start;
	public StringNode end;
	int size;
	
	public LinkedList()
	{
		start = null;
		end = null;
		size = 0;
	}
	boolean isEmpty()
	{
		if(start==null)
			return true;
		else
			return false;
	}
	
	int getSize()
	{
		return size;
	}
	
	public void insertAtStart(String val)
	{
		StringNode nptr = new StringNode(val,null);
		size++;
	if(start == null)
	{
		start = nptr;
		end = start;
	}
	else
	{
		nptr.setLink(start);
		start = nptr;
	}
	}
	
	public void insertAtEnd(String val)
	{
		StringNode nptr = new StringNode(val , null);
		size++;
		
		if(start == null)
		{
			start = nptr;
			end = start;
		}
		else
		{
			nptr.setLink(end);
			end = nptr;
		}
	}
	
}
