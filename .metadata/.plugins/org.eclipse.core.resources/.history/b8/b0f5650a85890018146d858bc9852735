package DataStructure.core;



public class custlinkedlist{
	
	public Node start;
	public Node end;
	int size;
	
	public custlinkedlist()
	{
		start = null;
		end = null;
		size = 0;
	}
	boolean isEmpty()
	{
		if(size==0)
			return true;
		else
			return false;
	}
	
	int getSize()
	{
		return size;
	}
	
	public void insertAtStart(String val)
	{
		Node nptr = new Node(val);
		size++;
	if(start == null)
	{
		start = nptr;
		end = start;
	}
	else
	{
		nptr.setLink(start);
		start = nptr;
	}
	}
	
	public void insertAtEnd(String val)
	{
		Node nptr = new Node(val );
		size++;
		
		if(start == null)
		{
			start = nptr;
			end = start;
		}
		else
		{
			end.setLink(nptr);
			end = nptr;
		}
	}
	
	public void insertAtPos(String num , int pos )
	{
		Node nptr = new Node(num);
		Node ptr = start;
		 pos = pos-1;
		 for(int i=1;i<size;i++)
		 {
			 if( i == pos)
			 {
				 Node temp = ptr.getLink();
				 ptr.setLink(nptr);
				 nptr.setLink(temp);

			 break;
			 }
			 ptr = ptr.getLink();
		 }
		 size++;
	}
	
	public void delete(int pos)
	{
		if(pos == 1)
		{
			start = start.getLink();
			size--;
			return ;
		}
		
		if(pos == size)
		{
			Node s = start;
			Node t = start;
			while(s != end)
			{
				t = s;
				s = s.getLink();
			}
			
			end = t;
			end.setLink(null);
			size--;
			return;
		}
		Node ptr;
		ptr = start;
		pos = pos-1;
		for(int i=1;i<size-1;i++)
		{
			if( i == pos)
			{
				Node temp = ptr.getLink();
				temp = temp.getLink();
				ptr.setLink(temp);
				break;
			}
			ptr =ptr.getLink();
		}
		size--;
	}
	
	public void display()
	{
		if(size == 0)
		{
			System.out.println("empty linked List");
			return;
		}
		if(start.getLink() == null)
		{
			System.out.println(start.getData());
			return;
		}
		Node ptr = start;
		System.out.print(start.getData()+"->");
		ptr = start.getLink();
		while(ptr.getLink() != null)
		{
			System.out.print(ptr.getData()+"->");
			ptr = ptr.getLink();
		}
		System.out.println(ptr.getData());
	}
	 class Node {
		
		private  String data;
		private  Node next;
		
		public Node()
		{
			next = null;
			data = "0";
		}
		
		public Node(String val)
		{
			data = val;
			next = null;
		}

		public void setLink(Node  n)
		{
			next  = n;
		}
		
		public void setData(String d)
		{
			data = d;
		}
		
		public String getData()
		{
			return data;
		}
		
		public Node getLink()
		{
			return next;
		}
	}
}


